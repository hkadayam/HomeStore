// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var homestorecfg = homestorecfg || {};

/**
 * @constructor
 */
homestorecfg.BlkAllocator = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {homestorecfg.BlkAllocator}
 */
homestorecfg.BlkAllocator.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {homestorecfg.BlkAllocator=} obj
 * @returns {homestorecfg.BlkAllocator}
 */
homestorecfg.BlkAllocator.getRootAsBlkAllocator = function(bb, obj) {
  return (obj || new homestorecfg.BlkAllocator).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
homestorecfg.BlkAllocator.prototype.maxCacheFillVarsizeBlkAllocAttempt = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 3;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
homestorecfg.BlkAllocator.prototype.mutate_max_cache_fill_varsize_blk_alloc_attempt = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
homestorecfg.BlkAllocator.prototype.maxVarsizeBlkAllocAttempt = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 1000;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
homestorecfg.BlkAllocator.prototype.mutate_max_varsize_blk_alloc_attempt = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
homestorecfg.BlkAllocator.startBlkAllocator = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} maxCacheFillVarsizeBlkAllocAttempt
 */
homestorecfg.BlkAllocator.addMaxCacheFillVarsizeBlkAllocAttempt = function(builder, maxCacheFillVarsizeBlkAllocAttempt) {
  builder.addFieldInt32(0, maxCacheFillVarsizeBlkAllocAttempt, 3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} maxVarsizeBlkAllocAttempt
 */
homestorecfg.BlkAllocator.addMaxVarsizeBlkAllocAttempt = function(builder, maxVarsizeBlkAllocAttempt) {
  builder.addFieldInt32(1, maxVarsizeBlkAllocAttempt, 1000);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
homestorecfg.BlkAllocator.endBlkAllocator = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} maxCacheFillVarsizeBlkAllocAttempt
 * @param {number} maxVarsizeBlkAllocAttempt
 * @returns {flatbuffers.Offset}
 */
homestorecfg.BlkAllocator.createBlkAllocator = function(builder, maxCacheFillVarsizeBlkAllocAttempt, maxVarsizeBlkAllocAttempt) {
  homestorecfg.BlkAllocator.startBlkAllocator(builder);
  homestorecfg.BlkAllocator.addMaxCacheFillVarsizeBlkAllocAttempt(builder, maxCacheFillVarsizeBlkAllocAttempt);
  homestorecfg.BlkAllocator.addMaxVarsizeBlkAllocAttempt(builder, maxVarsizeBlkAllocAttempt);
  return homestorecfg.BlkAllocator.endBlkAllocator(builder);
}

/**
 * @constructor
 */
homestorecfg.Btree = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {homestorecfg.Btree}
 */
homestorecfg.Btree.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {homestorecfg.Btree=} obj
 * @returns {homestorecfg.Btree}
 */
homestorecfg.Btree.getRootAsBtree = function(bb, obj) {
  return (obj || new homestorecfg.Btree).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
homestorecfg.Btree.prototype.maxNodesToRebalance = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 3;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
homestorecfg.Btree.prototype.mutate_max_nodes_to_rebalance = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
homestorecfg.Btree.prototype.memBtreePageSize = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 8192;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
homestorecfg.Btree.prototype.mutate_mem_btree_page_size = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
homestorecfg.Btree.startBtree = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} maxNodesToRebalance
 */
homestorecfg.Btree.addMaxNodesToRebalance = function(builder, maxNodesToRebalance) {
  builder.addFieldInt32(0, maxNodesToRebalance, 3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} memBtreePageSize
 */
homestorecfg.Btree.addMemBtreePageSize = function(builder, memBtreePageSize) {
  builder.addFieldInt32(1, memBtreePageSize, 8192);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
homestorecfg.Btree.endBtree = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} maxNodesToRebalance
 * @param {number} memBtreePageSize
 * @returns {flatbuffers.Offset}
 */
homestorecfg.Btree.createBtree = function(builder, maxNodesToRebalance, memBtreePageSize) {
  homestorecfg.Btree.startBtree(builder);
  homestorecfg.Btree.addMaxNodesToRebalance(builder, maxNodesToRebalance);
  homestorecfg.Btree.addMemBtreePageSize(builder, memBtreePageSize);
  return homestorecfg.Btree.endBtree(builder);
}

/**
 * @constructor
 */
homestorecfg.Cache = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {homestorecfg.Cache}
 */
homestorecfg.Cache.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {homestorecfg.Cache=} obj
 * @returns {homestorecfg.Cache}
 */
homestorecfg.Cache.getRootAsCache = function(bb, obj) {
  return (obj || new homestorecfg.Cache).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
homestorecfg.Cache.prototype.entriesPerHashBucket = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 2;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
homestorecfg.Cache.prototype.mutate_entries_per_hash_bucket = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
homestorecfg.Cache.prototype.numEvictorPartitions = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 32;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
homestorecfg.Cache.prototype.mutate_num_evictor_partitions = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
homestorecfg.Cache.startCache = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} entriesPerHashBucket
 */
homestorecfg.Cache.addEntriesPerHashBucket = function(builder, entriesPerHashBucket) {
  builder.addFieldInt32(0, entriesPerHashBucket, 2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numEvictorPartitions
 */
homestorecfg.Cache.addNumEvictorPartitions = function(builder, numEvictorPartitions) {
  builder.addFieldInt32(1, numEvictorPartitions, 32);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
homestorecfg.Cache.endCache = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} entriesPerHashBucket
 * @param {number} numEvictorPartitions
 * @returns {flatbuffers.Offset}
 */
homestorecfg.Cache.createCache = function(builder, entriesPerHashBucket, numEvictorPartitions) {
  homestorecfg.Cache.startCache(builder);
  homestorecfg.Cache.addEntriesPerHashBucket(builder, entriesPerHashBucket);
  homestorecfg.Cache.addNumEvictorPartitions(builder, numEvictorPartitions);
  return homestorecfg.Cache.endCache(builder);
}

/**
 * @constructor
 */
homestorecfg.Device = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {homestorecfg.Device}
 */
homestorecfg.Device.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {homestorecfg.Device=} obj
 * @returns {homestorecfg.Device}
 */
homestorecfg.Device.getRootAsDevice = function(bb, obj) {
  return (obj || new homestorecfg.Device).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
homestorecfg.Device.prototype.maxErrorBeforeMarkingDevDown = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 100;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
homestorecfg.Device.prototype.mutate_max_error_before_marking_dev_down = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
homestorecfg.Device.prototype.maxOutstandingIosPerAioThread = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 200;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
homestorecfg.Device.prototype.mutate_max_outstanding_ios_per_aio_thread = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
homestorecfg.Device.prototype.maxCompletionsProcessPerEventPerThread = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 200;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
homestorecfg.Device.prototype.mutate_max_completions_process_per_event_per_thread = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
homestorecfg.Device.startDevice = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} maxErrorBeforeMarkingDevDown
 */
homestorecfg.Device.addMaxErrorBeforeMarkingDevDown = function(builder, maxErrorBeforeMarkingDevDown) {
  builder.addFieldInt32(0, maxErrorBeforeMarkingDevDown, 100);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} maxOutstandingIosPerAioThread
 */
homestorecfg.Device.addMaxOutstandingIosPerAioThread = function(builder, maxOutstandingIosPerAioThread) {
  builder.addFieldInt32(1, maxOutstandingIosPerAioThread, 200);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} maxCompletionsProcessPerEventPerThread
 */
homestorecfg.Device.addMaxCompletionsProcessPerEventPerThread = function(builder, maxCompletionsProcessPerEventPerThread) {
  builder.addFieldInt32(2, maxCompletionsProcessPerEventPerThread, 200);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
homestorecfg.Device.endDevice = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} maxErrorBeforeMarkingDevDown
 * @param {number} maxOutstandingIosPerAioThread
 * @param {number} maxCompletionsProcessPerEventPerThread
 * @returns {flatbuffers.Offset}
 */
homestorecfg.Device.createDevice = function(builder, maxErrorBeforeMarkingDevDown, maxOutstandingIosPerAioThread, maxCompletionsProcessPerEventPerThread) {
  homestorecfg.Device.startDevice(builder);
  homestorecfg.Device.addMaxErrorBeforeMarkingDevDown(builder, maxErrorBeforeMarkingDevDown);
  homestorecfg.Device.addMaxOutstandingIosPerAioThread(builder, maxOutstandingIosPerAioThread);
  homestorecfg.Device.addMaxCompletionsProcessPerEventPerThread(builder, maxCompletionsProcessPerEventPerThread);
  return homestorecfg.Device.endDevice(builder);
}

/**
 * @constructor
 */
homestorecfg.HomeStoreSettings = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {homestorecfg.HomeStoreSettings}
 */
homestorecfg.HomeStoreSettings.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {homestorecfg.HomeStoreSettings=} obj
 * @returns {homestorecfg.HomeStoreSettings}
 */
homestorecfg.HomeStoreSettings.getRootAsHomeStoreSettings = function(bb, obj) {
  return (obj || new homestorecfg.HomeStoreSettings).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
homestorecfg.HomeStoreSettings.prototype.version = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
homestorecfg.HomeStoreSettings.prototype.mutate_version = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {homestorecfg.BlkAllocator=} obj
 * @returns {homestorecfg.BlkAllocator|null}
 */
homestorecfg.HomeStoreSettings.prototype.blkallocator = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new homestorecfg.BlkAllocator).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {homestorecfg.Cache=} obj
 * @returns {homestorecfg.Cache|null}
 */
homestorecfg.HomeStoreSettings.prototype.cache = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new homestorecfg.Cache).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {homestorecfg.Btree=} obj
 * @returns {homestorecfg.Btree|null}
 */
homestorecfg.HomeStoreSettings.prototype.btree = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new homestorecfg.Btree).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {homestorecfg.Device=} obj
 * @returns {homestorecfg.Device|null}
 */
homestorecfg.HomeStoreSettings.prototype.device = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new homestorecfg.Device).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
homestorecfg.HomeStoreSettings.startHomeStoreSettings = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} version
 */
homestorecfg.HomeStoreSettings.addVersion = function(builder, version) {
  builder.addFieldInt32(0, version, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} blkallocatorOffset
 */
homestorecfg.HomeStoreSettings.addBlkallocator = function(builder, blkallocatorOffset) {
  builder.addFieldOffset(1, blkallocatorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} cacheOffset
 */
homestorecfg.HomeStoreSettings.addCache = function(builder, cacheOffset) {
  builder.addFieldOffset(2, cacheOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} btreeOffset
 */
homestorecfg.HomeStoreSettings.addBtree = function(builder, btreeOffset) {
  builder.addFieldOffset(3, btreeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} deviceOffset
 */
homestorecfg.HomeStoreSettings.addDevice = function(builder, deviceOffset) {
  builder.addFieldOffset(4, deviceOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
homestorecfg.HomeStoreSettings.endHomeStoreSettings = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
homestorecfg.HomeStoreSettings.finishHomeStoreSettingsBuffer = function(builder, offset) {
  builder.finish(offset);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} version
 * @param {flatbuffers.Offset} blkallocatorOffset
 * @param {flatbuffers.Offset} cacheOffset
 * @param {flatbuffers.Offset} btreeOffset
 * @param {flatbuffers.Offset} deviceOffset
 * @returns {flatbuffers.Offset}
 */
homestorecfg.HomeStoreSettings.createHomeStoreSettings = function(builder, version, blkallocatorOffset, cacheOffset, btreeOffset, deviceOffset) {
  homestorecfg.HomeStoreSettings.startHomeStoreSettings(builder);
  homestorecfg.HomeStoreSettings.addVersion(builder, version);
  homestorecfg.HomeStoreSettings.addBlkallocator(builder, blkallocatorOffset);
  homestorecfg.HomeStoreSettings.addCache(builder, cacheOffset);
  homestorecfg.HomeStoreSettings.addBtree(builder, btreeOffset);
  homestorecfg.HomeStoreSettings.addDevice(builder, deviceOffset);
  return homestorecfg.HomeStoreSettings.endHomeStoreSettings(builder);
}

// Exports for Node.js and RequireJS
this.homestorecfg = homestorecfg;
